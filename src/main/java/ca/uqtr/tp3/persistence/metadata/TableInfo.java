package ca.uqtr.tp3.persistence.metadata;

import ca.uqtr.tp3.persistence.annotation.Table;
import ca.uqtr.tp3.persistence.exception.MissingTableAnnotation;
import ca.uqtr.tp3.persistence.exception.NoPrimaryKeyFoundException;
import ca.uqtr.tp3.persistence.exception.PrimaryKeyColumnNotFoundException;
import ca.uqtr.tp3.utils.ReflectionUtils;

/**
 * Represent a table metadata
 *
 */
public class TableInfo {
	private String tableName;
	private PrimaryKeyInfo primaryKey;
	
	public TableInfo(Class<?> bean) throws MissingTableAnnotation, PrimaryKeyColumnNotFoundException, NoPrimaryKeyFoundException {
		Table tableAnnotation = bean.getAnnotation(Table.class);

		if (tableAnnotation == null) {
			throw new MissingTableAnnotation(bean);
		}
		
		this.tableName = bean.getSimpleName();
		
		if(!tableAnnotation.name().isEmpty()) {
			this.tableName = tableAnnotation.name();
		}
		
		if(tableAnnotation.pk().isEmpty()) {
			try {
				this.primaryKey = ReflectionUtils.getPrimaryKeys(bean).get(0);
			} catch (PrimaryKeyColumnNotFoundException e) {
				throw new NoPrimaryKeyFoundException(bean, e);
			}
		}else {
			ColumnInfo colInfo = ReflectionUtils.getColumns(bean)
					.stream()
					.filter(c -> c.getName().compareTo(tableAnnotation.pk()) == 0)
					.findFirst().orElse(null);
			
			if(colInfo == null)
				throw new NoPrimaryKeyFoundException(bean, new PrimaryKeyColumnNotFoundException(tableAnnotation.pk(), bean));
			
			this.primaryKey = new PrimaryKeyInfo(colInfo.getAnnotatedElement());
		}
		
		this.primaryKey.setAutoGenerated(tableAnnotation.autoGenerated());
	}
	/**
	 * Initializes a newly created TableInfo object so that it represents a TableInfo. 
	 *
	 * @param tableName
	 * @param primaryKe
	 */
	public TableInfo(String tableName, PrimaryKeyInfo primaryKey) {
		super();
		this.tableName = tableName;
		this.primaryKey = primaryKey;
	}
	
	/**
	 * @return the tableName
	 */
	public String getTableName() {
		return tableName;
	}
	
	/**
	 * @param tableName the tableName to set
	 */
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}
	
	/**
	 * @return the primaryKey
	 */
	public String getPrimaryKeyName() {
		return primaryKey.getName();
	}
	
	/**
	 * @return the primaryKey
	 */
	public PrimaryKeyInfo getPrimaryKeyInfo() {
		return primaryKey;
	}
	
	/**
	 * @param primaryKey the primaryKey to set
	 */
	public void setPrimaryKeyInfo(PrimaryKeyInfo primaryKey) {
		this.primaryKey = primaryKey;
	};
	
	
}

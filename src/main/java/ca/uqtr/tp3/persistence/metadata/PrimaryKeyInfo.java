package ca.uqtr.tp3.persistence.metadata;

import java.lang.reflect.AnnotatedElement;
import java.lang.reflect.Field;

import ca.uqtr.tp3.persistence.annotation.Column;
/**
 * Represent a primary key metadata
 *
 */
public class PrimaryKeyInfo {
	private String name;
	private AnnotatedElement annotatedElement;
	private boolean autoGenerated;
	
	public PrimaryKeyInfo(AnnotatedElement annotatedElement) {
		if(annotatedElement == null) {
			throw new NullPointerException("Can't construct column metadata from null");
		}
		
		this.setAnnotatedElement(annotatedElement);
		
		this.setName(((Field) this.annotatedElement).getName());;
		
		if(this.annotatedElement.isAnnotationPresent(Column.class)) {
			Column colAnnotation = this.annotatedElement.getAnnotation(Column.class);
			if(!colAnnotation.name().isEmpty()) {
				this.setName(colAnnotation.name());
			}
		}
	}
	/**
	 * @return the annotatedElement
	 */
	public AnnotatedElement getAnnotatedElement() {
		return annotatedElement;
	}
	/**
	 * @param annotatedElement the annotatedElement to set
	 */
	public void setAnnotatedElement(AnnotatedElement annotatedElement) {
		this.annotatedElement = annotatedElement;
	}
	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}
	/**
	 * @param name the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}
	/**
	 * @return the autoGenerated
	 */
	public boolean isAutoGenerated() {
		return autoGenerated;
	}
	/**
	 * @param autoGenerated the autoGenerated to set
	 */
	public void setAutoGenerated(boolean autoGenerated) {
		this.autoGenerated = autoGenerated;
	}

}
